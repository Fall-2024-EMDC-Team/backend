# Generated by Django 4.2.16 on 2024-10-30 18:34

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=99)),
                ('date', models.DateField()),
                ('is_open', models.BooleanField()),
                ('is_tabulated', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Judge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('phone_number', models.CharField(max_length=10)),
                ('contestid', models.IntegerField()),
                ('presentation', models.BooleanField()),
                ('mdo', models.BooleanField()),
                ('journal', models.BooleanField()),
                ('penalties', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='JudgeClusters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cluster_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='MapClusterToTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clusterid', models.IntegerField()),
                ('teamid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapCoachToTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamid', models.IntegerField()),
                ('coachid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapContestToCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestid', models.IntegerField()),
                ('clusterid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapContestToJudge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestid', models.IntegerField()),
                ('judgeid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapContestToOrganizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestid', models.IntegerField()),
                ('organizerid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapContestToTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contestid', models.IntegerField()),
                ('teamid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapJudgeToCluster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('judgeid', models.IntegerField()),
                ('clusterid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='MapScoresheetToTeamJudge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teamid', models.IntegerField()),
                ('judgeid', models.IntegerField()),
                ('scoresheetid', models.IntegerField()),
                ('sheetType', models.IntegerField(choices=[(1, 'Presentation'), (2, 'Journal'), (3, 'Machinedesign'), (4, 'Penalties')])),
            ],
        ),
        migrations.CreateModel(
            name='MapUserToRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.IntegerField(choices=[(1, 'Admin'), (2, 'Organizer'), (3, 'Judge'), (4, 'Coach')])),
                ('uuid', models.IntegerField()),
                ('relatedid', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Scoresheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheetType', models.IntegerField(choices=[(1, 'Presentation'), (2, 'Journal'), (3, 'Machinedesign'), (4, 'Penalties')])),
                ('isSubmitted', models.BooleanField()),
                ('field1', models.FloatField(blank=True, null=True)),
                ('field2', models.FloatField(blank=True, null=True)),
                ('field3', models.FloatField(blank=True, null=True)),
                ('field4', models.FloatField(blank=True, null=True)),
                ('field5', models.FloatField(blank=True, null=True)),
                ('field6', models.FloatField(blank=True, null=True)),
                ('field7', models.FloatField(blank=True, null=True)),
                ('field8', models.FloatField(blank=True, null=True)),
                ('field9', models.FloatField(blank=True, null=True)),
                ('field10', models.FloatField(blank=True, null=True)),
                ('field11', models.FloatField(blank=True, null=True)),
                ('field12', models.FloatField(blank=True, null=True)),
                ('field13', models.FloatField(blank=True, null=True)),
                ('field14', models.FloatField(blank=True, null=True)),
                ('field15', models.FloatField(blank=True, null=True)),
                ('field16', models.FloatField(blank=True, null=True)),
                ('field17', models.FloatField(blank=True, null=True)),
                ('field18', models.FloatField(blank=True, null=True)),
                ('field19', models.FloatField(blank=True, null=True)),
                ('field20', models.FloatField(blank=True, null=True)),
                ('field21', models.FloatField(blank=True, null=True)),
                ('fieldText', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teams',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=99)),
                ('journal_score', models.FloatField()),
                ('presentation_score', models.FloatField()),
                ('machinedesign_score', models.FloatField()),
                ('penalties_score', models.FloatField()),
                ('total_score', models.FloatField()),
                ('team_rank', models.IntegerField(blank=True, null=True)),
            ],
        ),
    ]
